//Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1.
//You must write an algorithm with O(log n) runtime complexity.


//Create variable "left" as a left pointer
//Create variable "right" as a right pointer
//Create a while loop for while left <= right
	//Create middle variable by adding right and left /2 and round down.
	//Create potential match variable with index of middle
	//Create condition if potential match = target, return the middle
	//Create condition if potetnial match is greater that target, change right pointer to middle - 1
	//Create condition if potential match is less that target, change left pointer to middle + 1
//return -1.


var search = function(nums, target) {
	let left = 0;
	let right = nums.length - 1;
	while (left <= right){
		let middle = Math.floor((left + right) / 2);
		let potentialMatch = nums[middle];
		if (potentialMatch === target) {
			return middle;
		} else if (potentialMatch > target) {
			right = middle -1;
		} else {
			left = middle + 1;
		}
	}
	return -1;
};